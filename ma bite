-- Library

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("Anime Tales | Private Script üîí", "DarkTheme")
local Tab = Window:NewTab("Farm Section")
local Tab2 = Window:NewTab("Boss Section")
local Tab3 = Window:NewTab("Summon Section")
local Tab4 = Window:NewTab("Player Section")
local Tab5 = Window:NewTab("Teleport Section")

local Section = Tab:NewSection("Stats Farming")
local Section01 = Tab:NewSection("NPC Farming")

local Section2 = Tab2:NewSection("Boss Farming")
local Section21 = Tab2:NewSection("Skills Section")

local Section3 = Tab3:NewSection("Summon Farming")
local Section4 = Tab4:NewSection("Player Section")

local Section5 = Tab5:NewSection("Place Teleport Section")
local Section51 = Tab5:NewSection("NPC Teleport Section")

-- Variables

local Players = game:GetService("Players")
local lp = Players.LocalPlayer

local choosed_zone
local island_zone
local choosed_weapon

local sword_priority = false
local restart_loop

local boss_started
local choosed_boss
local boss_weapon
local using_skill = false

local nombre_summon = 1
local portail

local tp_choosed_zone
local tp_choosed_island
local tp_choosed_npc

local reach = 5

local QueueButton = game:GetService("Players").LocalPlayer.PlayerGui.UI.Bosses.Panel.Buttons:FindFirstChild("QueueButton")
local LeaveButton = game:GetService("Players").LocalPlayer.PlayerGui.UI.Bosses.Panel.Buttons:FindFirstChild("LeaveQueueButton")

-- Tables

local Islands = {

    ["MarineHQ"] =  {
        CFrame.new(1936.42102, 573.109619, 3186.48706, 0.909923017, 0, 0.41477716, 0, 1, 0, -0.41477716, 0, 0.909923017),
        CFrame.new(2459.24609, 43.6221733, 2609.94678, 1, 0, 0, 0, 1, 0, 0, 0, 1),
        CFrame.new(1508.02612, 43.6380196, 2615.28979, 0.990270376, 0, 0.13915664, 0, 1, 0, -0.13915664, 0, 0.990270376),
        CFrame.new(1965.17358, 147.508926, 3600.01123, 1, 0, 0, 0, 1, 0, 0, 0, 1),
    },

    ["CakeIsland"] = {
        CFrame.new(6227.14648, 37.3825264, -3689.07764, -0.999848366, 0, 0.017436387, 0, 1, 0, -0.017436387, 0, -0.999848366),
        CFrame.new(5613.23438, 46.6879959, -3164.61597, -1, 0, 0, 0, 1, 0, 0, 0, -1),
        CFrame.new(6363.45117, 47.3237953, -2883.91089, -1, 0, 0, 0, 1, 0, 0, 0, -1),
        CFrame.new(5638.49219, 44.7926407, -2508.17163, -0.957837582, 0, -0.287310094, 0, 1, 0, 0.287310094, 0, -0.957837582),
    },

    ["SamuraiIsland"] = {
        CFrame.new(-1417.4231, 88.5365677, -3078.03491, 1, 0, 0, 0, 1, 0, 0, 0, 1),
        CFrame.new(-2403.34277, 43.5614204, -3185.95898, 1, 0, 0, 0, 1, 0, 0, 0, 1),
        CFrame.new(-2326.12891, 377.432251, -4417.16846, 0.901107192, 0, 0.433596432, 0, 1, 0, -0.433596432, 0, 0.901107192),
        CFrame.new(-3470.31079, 44.9839668, -3492.8418, 1, 0, 0, 0, 1, 0, 0, 0, 1),
        CFrame.new(-1872.8916, 33.5365677, -1825.3103, 1, 0, 0, 0, 1, 0, 0, 0, 1)
    },
}

local Summons = {"featured", "battlepass"}

local Zones = {}
for i,v in pairs(game:GetService("Workspace").WorldObjects.TrainingZones:GetChildren()) do
	if v:IsA("Model") then
		table.insert(Zones, v.Name)
	end
end
table.sort(Zones)

local Boss = {"Big Mom", "Kaido"}

local NPCs = {}
for i,v in pairs(game:GetService("Workspace").WorldObjects.NPCs.Standard:GetChildren()) do
    if v:IsA("Model") then
        table.insert(NPCs, v.Name)
    end
end

-- Functions

local function FindIsland(zone)
    if tostring(zone):match("Island 1") then
        return "MarineHQ"
    elseif tostring(zone):match("Island 2") then
        return "CakeIsland"
    elseif tostring(zone):match("Island 3") then
        return "SamuraiIsland"
    end
end

local function ClickMouse()
    local args = {[1] = "mouse1Pressed"}
     game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CombatCommunication"):FireServer(unpack(args))    
end

local function click(a)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,true,a,1)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,false,a,1)
end

local function ChangeWeapon(weapon)
    local args = {[1] = "setSelectedTrainingStat",[2] = weapon}
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PlayerCommunication"):FireServer(unpack(args))
end

local function JoinQueue()
    if QueueButton.Visible then
        return true
    end
    return false
end

local function GetNearestMob()
    local distance, maxdistance, mobhrp = nil, math.huge, nil
    
    for i,v in pairs(game:GetService("Workspace").WorldObjects.NPCs.Citizens:GetDescendants()) do
        if v:IsA("Part") and v.Name == "HumanoidRootPart" then
            if v.Parent:FindFirstChild("Humanoid").Health > 0 then
                distance = (lp.Character.HumanoidRootPart.Position - v.Position).Magnitude
                if distance < maxdistance then
                    maxdistance = distance
                    mobhrp = v
                end
            end
        end
    end
    return mobhrp
end

-- Main

Section:NewDropdown("Choisi la zone √† farmer", "t'as besoin de savoir quoi?", {unpack(Zones)}, function(currentOption)
    choosed_zone = currentOption
    island_zone = FindIsland(currentOption)
    if tostring(currentOption):match("Energy") then
        choosed_weapon = "energy"
    elseif tostring(currentOption):match("Strength") then
        choosed_weapon = "strength"
    elseif tostring(currentOption):match("Defense") then
        choosed_weapon = "defense"
    elseif tostring(currentOption):match("Speed") then
        choosed_weapon = "speed"
    end
    warn(choosed_weapon)
    warn(island_zone)
    warn(choosed_zone)
end)

Section:NewToggle("Start Farming üåå", "jsp", function(state)
    if state then
        getgenv().AutoFarmZone = state

        task.spawn(function()
            while task.wait() do
                if AutoFarmZone and not boss_started then
                    if restart_loop then
                        task.wait(10)
                        restart_loop = false
                    end
                    
                    local char = lp.Character or lp.CharacterAdded:Wait()
                    local hrp = char:FindFirstChild("HumanoidRootPart")
                    local hum = char:FindFirstChild("Humanoid")

                    if hrp and hum.Health > 0 then
                        
                        if choosed_weapon and choosed_zone and island_zone ~= nil then
                            
                            for island, v in pairs(Islands) do
                                if island == island_zone then
                                    repeat
                                        for k, cframes in pairs(Islands[tostring(island_zone)]) do
                                            hrp.CFrame = cframes
                                            task.wait()
                                        end
                                    until game:GetService("Workspace").WorldObjects.TrainingZones[choosed_zone]:FindFirstChild("BoundingBox")
                                end
                            end

                            if game:GetService("Workspace").WorldObjects.TrainingZones[choosed_zone]:FindFirstChild("BoundingBox") then
                                hrp.CFrame = game:GetService("Workspace").WorldObjects.TrainingZones[choosed_zone]:FindFirstChild("BoundingBox").CFrame + Vector3.new(-10, 10, 0)
                            end

                            repeat
                                task.wait()

                                if choosed_weapon == "speed" and not boss_started then
                                    game:GetService('VirtualInputManager'):SendKeyEvent(true,'LeftShift',false,game)
                                    game:GetService('VirtualInputManager'):SendKeyEvent(true,'W',false,game)
    
                                    task.spawn(function()
                                        hrp.CFrame = game:GetService("Workspace").WorldObjects.TrainingZones[choosed_zone]:FindFirstChild("BoundingBox").CFrame + Vector3.new(-10, 10, 0)
                                        task.wait(2)
                                    end)
                                end

                                if not sword_priority then
                                    ChangeWeapon(choosed_weapon)
                                end

                                if choosed_weapon == "strength" then
                                    task.spawn(function()
                                        ClickMouse()
                                        task.wait(.75)
                                    end)
                                end

                            until boss_started or not AutoFarmZone
                        end
                    end
                end
            end
        end)
    else
        getgenv().AutoFarmZone = state
        choosed_weapon = nil
        ChangeWeapon("strength")
    end
end)

Section:NewToggle("Farm Sword ‚öîÔ∏è", "ToggleInfo", function(state)
    if state then
        getgenv().FarmSword = state
        sword_priority = state

        task.spawn(function()
            while task.wait(.75) do
                if FarmSword and not boss_started then
                    sword_priority = true
                    ChangeWeapon("weapon")
                    ClickMouse()
                end
            end
        end)
    else
        getgenv().FarmSword = state
        sword_priority = state
    end
end)

Section01:NewSlider("Reach", "SliderInfo", 10, 5, function(s)
    reach = s
end)

Section01:NewToggle("Auto Citizen", "ToggleInfo", function(state)
    if state then
        getgenv().AutoCitizen = state
        
        task.spawn(function()
            while task.wait() do
                if AutoCitizen then
                    local char = lp.Character or lp.CharacterAdded:Wait()

                    if char and AutoCitizen then
                        local hum = char:WaitForChild("Humanoid")
                        if hum and hum.Health > 0 then
                            local mobhrp = GetNearestMob()
                            local hrp = char:FindFirstChild("HumanoidRootPart")
                            if hrp and mobhrp then
                                repeat
                                    task.wait()
                                    hrp.CFrame = mobhrp.CFrame + mobhrp.CFrame.lookVector * - reach
                                    ClickMouse()
                                until (not mobhum or not hum or not mobhrp or not hrp) or (mobhum.Health <= 0 or hum.Health <= 0) or boss_started or not AutoCitizen
                            end
                        end
                    end
                end
            end
        end)
    else
        getgenv().AutoCitizen = state
    end
end)

Section2:NewDropdown("Choisi le boss", "oui", {unpack(Boss)}, function(currentOption)
    choosed_boss = currentOption
end)

Section2:NewDropdown("Quelle Arme? üî´", "oui", {"Ep√©e", "Poing"}, function(currentOption)
    boss_weapon = currentOption
end)

Section2:NewToggle("Auto Boss üíº", "ToggleInfo", function(state)
    if state then
        getgenv().AutoBoss = true

        task.spawn(function()
            while task.wait() do
                if AutoBoss then
                    if JoinQueue() and not LeaveButton.Visible then
                        if game:GetService("Players").LocalPlayer.PlayerGui.UI.Bosses.Visible then
                            click(QueueButton)
                            task.wait(1)
                            game:GetService("Players").LocalPlayer.PlayerGui.UI.Bosses.Visible = false
                        else
                            game:GetService("Players").LocalPlayer.PlayerGui.UI.Bosses.Visible = true
                        end
                    end
                    
                    if game:GetService("Workspace").WorldObjects.Bosses:FindFirstChild("yourMama") then
                        boss_started = true
                        local char = lp.Character or lp.CharacterAdded:Wait()
                        local hrp = char:WaitForChild("HumanoidRootPart")
                        local hum = char:WaitForChild("Humanoid")
                        if hrp and hum then
                            local Boss = game:GetService("Workspace").WorldObjects.Bosses:FindFirstChild("yourMama")
                            if Boss and Boss:WaitForChild("Health") and Boss:WaitForChild("RootPart") then
                                if Boss.Health.Value > 0 then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10616.5556640625, 73.52395629882812, -41907.953125)
                                    if boss_weapon == "Ep√©e" then
                                        ChangeWeapon("weapon")
                                        ClickMouse()
                                    elseif boss_weapon == "Poing" then
                                        ChangeWeapon("strength")
                                        ClickMouse()
                                    end
                                else
                                    boss_started = false
                                    restart_loop = true
                                end
                            end
                        end
                    end
                end
            end
        end)
    else
        getgenv().AutoBoss = false
        boss_started = false
    end
end)

Section21:NewToggle("Auto Skill Z", "ToggleInfo", function(state)
    if state then
        getgenv().AutoSkillZ = state

        while AutoSkillZ and task.wait(math.random(2, 3)) do
            if boss_started then
                local char = lp.Character or lp.CharacterAdded

                local hrp = char:FindFirstChild("HumanoidRootPart")
                local hum = char:FindFirstChild("Humanoid")
                if hrp and hum.Health > 0 then
                    game:GetService('VirtualInputManager'):SendKeyEvent(true,'Z',false,game)
                end
            end
        end
    else
        getgenv().AutoSkillZ = state
    end
end)

Section21:NewToggle("Auto Skill X", "ToggleInfo", function(state)
    if state then
        getgenv().AutoSkillX = state

        while AutoSkillX and task.wait(math.random(2, 3)) do
            if boss_started then
                local char = lp.Character or lp.CharacterAdded

                local hrp = char:FindFirstChild("HumanoidRootPart")
                local hum = char:FindFirstChild("Humanoid")
                if hrp and hum.Health > 0 then
                    game:GetService('VirtualInputManager'):SendKeyEvent(true,'X',false,game)
                end
            end
        end
    else
        getgenv().AutoSkillX = state
    end
end)


Section21:NewToggle("Auto Skill C", "ToggleInfo", function(state)
    if state then
        getgenv().AutoSkillC = state

        while AutoSkillC and task.wait(math.random(2, 3)) do
            if boss_started then
                local char = lp.Character or lp.CharacterAdded

                local hrp = char:FindFirstChild("HumanoidRootPart")
                local hum = char:FindFirstChild("Humanoid")
                if hrp and hum.Health > 0 then
                    game:GetService('VirtualInputManager'):SendKeyEvent(true,'C',false,game)
                end
            end
        end
    else
        getgenv().AutoSkillC = state
    end
end)


Section21:NewToggle("Auto Skill V", "ToggleInfo", function(state)
    if state then
        getgenv().AutoSkillV = state

        while AutoSkillV and task.wait(math.random(2, 3)) do
            if boss_started then
                local char = lp.Character or lp.CharacterAdded

                local hrp = char:FindFirstChild("HumanoidRootPart")
                local hum = char:FindFirstChild("Humanoid")
                if hrp and hum.Health > 0 then
                    game:GetService('VirtualInputManager'):SendKeyEvent(true,'V',false,game)
                end
            end
        end
    else
        getgenv().AutoSkillV = state
    end
end)


Section21:NewToggle("Auto Skill B", "ToggleInfo", function(state)
    if state then
        getgenv().AutoSkillB = state

        while AutoSkillB and task.wait(math.random(2, 3)) do
            if boss_started then
                local char = lp.Character or lp.CharacterAdded

                local hrp = char:FindFirstChild("HumanoidRootPart")
                local hum = char:FindFirstChild("Humanoid")
                if hrp and hum.Health > 0 then
                    game:GetService('VirtualInputManager'):SendKeyEvent(true,'B',false,game)
                end
            end
        end
    else
        getgenv().AutoSkillB = state
    end
end)


Section3:NewDropdown("Quel Portail?", "DropdownInf", {unpack(Summons)}, function(currentOption)
    portail = currentOption
end)

Section3:NewSlider("Combien √† la fois?", "SliderInfo", 5, 1, function(s)
    nombre_summon = s
end)

Section3:NewToggle("Auto Summon", "ToggleInfo", function(state)
    if state then
        getgenv().AutoSummon = state

        task.spawn(function()
            while task.wait(2) do
                if AutoSummon then
                    local args = {[1] = "rollGacha",[2] = portail,[3] = nombre_summon}
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PlayerCommunication"):FireServer(unpack(args))                    
                    task.wait(5)
                end
            end
        end)
    else
        getgenv().AutoSummon = state
    end
end)

Section4:NewButton("Anti AFK", "ButtonInfo", function()
    for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
        v:Disable()
    end
end)

Section4:NewSlider("Choisi ta rapidit√©", "SliderInfo", 500, 0, function(s)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

Section4:NewSlider("Puissance du Saut", "SliderInfo", 250, 0, function(s)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)

Section4:NewButton("Infinite Yield", "ButtonInfo", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

Section5:NewDropdown("Choisi l'endroit", "DropdownInf", {unpack(Zones)}, function(currentOption)
    tp_choosed_zone = currentOption
    tp_choosed_island = FindIsland(currentOption)

    warn(tp_choosed_zone)
    warn(tp_choosed_island)
end)

Section5:NewButton("Teleport", "ButtonInfo", function()
    if tp_choosed_island and tp_choosed_zone ~= nil then
        for island, v in pairs(Islands) do
            if island == tp_choosed_island then
                repeat
                    for k, cframes in pairs(Islands[tostring(tp_choosed_island)]) do
                        lp.Character.HumanoidRootPart.CFrame = cframes
                        task.wait()
                    end
                until game:GetService("Workspace").WorldObjects.TrainingZones[tp_choosed_zone]:FindFirstChild("BoundingBox")
            end
        end

        if game:GetService("Workspace").WorldObjects.TrainingZones[tp_choosed_zone]:FindFirstChild("BoundingBox") then
            lp.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").WorldObjects.TrainingZones[tp_choosed_zone]:FindFirstChild("BoundingBox").CFrame + Vector3.new(-10, 10, 0)
        end
    end
end)

Section51:NewDropdown("Choisi le NPC", "DropdownInf", {unpack(NPCs)}, function(currentOption)
    tp_choosed_npc = currentOption
end)

Section51:NewButton("Teleport", "ButtonInfo", function()
    if tp_choosed_npc ~= nil then
        for i,v in pairs(game:GetService("Workspace").WorldObjects.NPCs.Standard:GetChildren()) do
            if v.Name == tostring(tp_choosed_npc) then
                if v:FindFirstChild("HumanoidRootPart") then
                    lp.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame
                elseif v:FindFirstChild("RootPart") then
                    lp.Character.HumanoidRootPart.CFrame = v.RootPart.CFrame
                elseif v:FindFirstChild("Head") then
                    lp.Character.HumanoidRootPart.CFrame = v.Head.CFrame
                end
            end
        end
    end
end)
